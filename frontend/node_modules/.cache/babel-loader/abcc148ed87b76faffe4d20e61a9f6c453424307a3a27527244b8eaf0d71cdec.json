{"ast":null,"code":"export const sendMessageToAPI = async input => {\n  try {\n    //http://18.140.117.184:11435/chat\n    const response = await fetch('http://127.0.0.1:5000/agents', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        message: input\n      })\n    });\n    if (!response.ok) {\n      throw new Error('Network response was not ok');\n    }\n    const data = await response.json();\n    return data; // 假设Flask后端返回的是与之前格式一致的数组对象\n  } catch (error) {\n    console.error('Error in sendMessageToAPI:', error);\n    return [];\n  }\n};","map":{"version":3,"names":["sendMessageToAPI","input","response","fetch","method","headers","body","JSON","stringify","message","ok","Error","data","json","error","console"],"sources":["/Users/fanyuhang/WebstormProjects/multi_agent_selection/frontend/src/api/backend.js"],"sourcesContent":["export const sendMessageToAPI = async (input) => {\n  try {//http://18.140.117.184:11435/chat\n    const response = await fetch('http://127.0.0.1:5000/agents', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({ message: input }),\n    });\n\n    if (!response.ok) {\n      throw new Error('Network response was not ok');\n    }\n\n    const data = await response.json();\n    return data;  // 假设Flask后端返回的是与之前格式一致的数组对象\n  } catch (error) {\n    console.error('Error in sendMessageToAPI:', error);\n    return [];\n  }\n};"],"mappings":"AAAA,OAAO,MAAMA,gBAAgB,GAAG,MAAOC,KAAK,IAAK;EAC/C,IAAI;IAAC;IACH,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,8BAA8B,EAAE;MAC3DC,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACP,cAAc,EAAE;MAClB,CAAC;MACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QAAEC,OAAO,EAAER;MAAM,CAAC;IACzC,CAAC,CAAC;IAEF,IAAI,CAACC,QAAQ,CAACQ,EAAE,EAAE;MAChB,MAAM,IAAIC,KAAK,CAAC,6BAA6B,CAAC;IAChD;IAEA,MAAMC,IAAI,GAAG,MAAMV,QAAQ,CAACW,IAAI,CAAC,CAAC;IAClC,OAAOD,IAAI,CAAC,CAAE;EAChB,CAAC,CAAC,OAAOE,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,4BAA4B,EAAEA,KAAK,CAAC;IAClD,OAAO,EAAE;EACX;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}