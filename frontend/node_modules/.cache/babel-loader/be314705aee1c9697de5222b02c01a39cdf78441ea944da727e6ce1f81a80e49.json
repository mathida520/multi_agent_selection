{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState } from 'react';\nimport { sendMessageToAPI } from '../api/backend';\nfunction useChatBot() {\n  _s();\n  const [messages, setMessages] = useState([]);\n  const handleSendMessage = async input => {\n    if (input.trim()) {\n      const userMessage = {\n        from: 'user',\n        messages: [{\n          model: \"User\",\n          message: input\n        }]\n      };\n      setMessages(prevMessages => [...prevMessages, userMessage]);\n      try {\n        // 发送请求到Flask后端，并获取响应数据\n        const data = await sendMessageToAPI(input);\n        const botMessage = {\n          from: 'bot',\n          messages: data // 假设API返回的是数组对象格式\n        };\n        setMessages(prevMessages => [...prevMessages, botMessage]);\n      } catch (error) {\n        console.error('Error fetching AI response:', error);\n      }\n    }\n  };\n  return {\n    messages,\n    handleSendMessage\n  };\n}\n_s(useChatBot, \"dxxfFX7fiXmC0h9Fk+B7I5VonqM=\");\nexport default useChatBot;","map":{"version":3,"names":["useState","sendMessageToAPI","useChatBot","_s","messages","setMessages","handleSendMessage","input","trim","userMessage","from","model","message","prevMessages","data","botMessage","error","console"],"sources":["/Users/fanyuhang/WebstormProjects/multi_agent_selection/frontend/src/components/UseChatBot.js"],"sourcesContent":["import {useState} from 'react';\nimport {sendMessageToAPI} from '../api/backend';\n\nfunction useChatBot() {\n    const [messages, setMessages] = useState([]);\n\n    const handleSendMessage = async (input) => {\n        if (input.trim()) {\n            const userMessage = {\n                from: 'user',\n                messages: [\n                    {model: \"User\", message: input}\n                ]\n            };\n            setMessages((prevMessages) => [...prevMessages, userMessage]);\n\n            try {\n                // 发送请求到Flask后端，并获取响应数据\n                const data = await sendMessageToAPI(input);\n\n                const botMessage = {\n                    from: 'bot',\n                    messages: data  // 假设API返回的是数组对象格式\n                };\n\n                setMessages((prevMessages) => [...prevMessages, botMessage]);\n            } catch (error) {\n                console.error('Error fetching AI response:', error);\n            }\n        }\n    };\n\n    return {messages, handleSendMessage};\n}\n\nexport default useChatBot;\n"],"mappings":";AAAA,SAAQA,QAAQ,QAAO,OAAO;AAC9B,SAAQC,gBAAgB,QAAO,gBAAgB;AAE/C,SAASC,UAAUA,CAAA,EAAG;EAAAC,EAAA;EAClB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGL,QAAQ,CAAC,EAAE,CAAC;EAE5C,MAAMM,iBAAiB,GAAG,MAAOC,KAAK,IAAK;IACvC,IAAIA,KAAK,CAACC,IAAI,CAAC,CAAC,EAAE;MACd,MAAMC,WAAW,GAAG;QAChBC,IAAI,EAAE,MAAM;QACZN,QAAQ,EAAE,CACN;UAACO,KAAK,EAAE,MAAM;UAAEC,OAAO,EAAEL;QAAK,CAAC;MAEvC,CAAC;MACDF,WAAW,CAAEQ,YAAY,IAAK,CAAC,GAAGA,YAAY,EAAEJ,WAAW,CAAC,CAAC;MAE7D,IAAI;QACA;QACA,MAAMK,IAAI,GAAG,MAAMb,gBAAgB,CAACM,KAAK,CAAC;QAE1C,MAAMQ,UAAU,GAAG;UACfL,IAAI,EAAE,KAAK;UACXN,QAAQ,EAAEU,IAAI,CAAE;QACpB,CAAC;QAEDT,WAAW,CAAEQ,YAAY,IAAK,CAAC,GAAGA,YAAY,EAAEE,UAAU,CAAC,CAAC;MAChE,CAAC,CAAC,OAAOC,KAAK,EAAE;QACZC,OAAO,CAACD,KAAK,CAAC,6BAA6B,EAAEA,KAAK,CAAC;MACvD;IACJ;EACJ,CAAC;EAED,OAAO;IAACZ,QAAQ;IAAEE;EAAiB,CAAC;AACxC;AAACH,EAAA,CA9BQD,UAAU;AAgCnB,eAAeA,UAAU","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}